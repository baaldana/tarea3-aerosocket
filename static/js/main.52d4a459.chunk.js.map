{"version":3,"sources":["logo.svg","components/Button.js","components/Header.js","components/Socket.js","components/ChatLog.js","components/ChatMessage.js","components/FlightInfo.js","components/MapView.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","props","socket","io","path","ChatLog","nombre","useState","messages","setMessages","messagesEndRef","useRef","useEffect","on","data","console","log","map","e","i","Date","date","toLocaleString","name","message","ref","ChatMessage","setMessage","setName","registered","setRegistered","onSubmit","preventDefault","htmlFor","value","onChange","target","emit","id","cols","rows","FlightInfo","flights","setFlights","length","flight","code","airline","origin","destination","plane","seats","passengers","passenger","age","MapView","position","setPosition","trajectory","setTrajectory","activateMap","setActivateMap","displayPos","setDisplayPos","setDisplayTrajectory","colorOptions","newPosition","newTrajectory","hasOwnProperty","current_trajectory","undefined","plane_icon","L","icon","iconUrl","iconSize","rotationAngle","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","Polyline","pathOptions","positions","Object","keys","positon_key","trajectory_key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52d4a459.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import PropTypes from 'prop-types';\n\nconst Button = ({ color, text, onClick }) => {\n\n\n    return (\n        <button onClick={onClick} style={{backgroundColor: color}} className='btn'>{text}</button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n    text: 'Sample Text',\n}\n\nexport default Button\n","import Button from './Button'\n\nconst Header = (props) => {\n    return (\n        <header className='header'>\n            <h1>Aerosocket</h1>\n        </header>\n    )\n}\n\n\nexport default Header","import io from 'socket.io-client';\n\nlet socket = io(\"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\", {\n        path: '/flights'\n    });\n\nexport default socket","import React, { useState, useEffect, useRef} from 'react';\nimport Button from './Button';\nimport socket from './Socket'\n\n\nconst ChatLog = ({ nombre }) => {\n    const [messages, setMessages] = useState([]);\n\n    const messagesEndRef = useRef(null)\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      }\n\n    useEffect( () => {\n        socket.on('CHAT', (data) => {\n            console.log('cambiando log chat')\n            setMessages(messages=>[...messages, data]);   \n            //scrollToBottom()\n        })\n        //return () => {socket.off()}\n        return () => {}\n    }, [])\n\n    \n    // for (let i=0; i<messages.length; i++) {\n    //     messages[i].date = join(Date(messages[i].date, date_format, '-'));\n    // }\n\n    // {new Date(e.date).getDate()}-{new Date(e.date).getMonth()}-{new Date(e.date).getFullYear()}\n    return (\n        <div className='chat_log'>\n            {messages.map((e,i) => <div key={i}> {new Date(e.date).toLocaleString('es-CL')} | {e.name}: {e.message}</div>)}\n            <div ref={messagesEndRef}/>\n        </div>\n    )\n}\n\nexport default ChatLog\n","import React, { useState, useEffect, useRef} from 'react';\nimport Button from './Button';\nimport socket from './Socket'\n\n\nconst ChatMessage = () => {\n    const [message, setMessage] = useState('');\n    const [name, setName] = useState('');\n    const [registered, setRegistered] = useState(false);\n\n    \n\n    const register = (e) => {\n        e.preventDefault();\n        if (name !== \"\") {\n            setRegistered(true);\n        }\n    }\n\n    const submit = (e) => {\n        e.preventDefault();\n        socket.emit('CHAT', {name, message});\n        console.log('envi√© un mensaje');\n        setMessage('');\n    }\n\n    return (\n        <div>\n            {\n                !registered &&\n                <form onSubmit={register}>\n                <label htmlFor=''>Escribe tu nombre:</label>\n                <input value={name} onChange={e => setName(e.target.value)} />\n                <Button color='gray' text='Ir al chat'/>\n                </form>\n            }\n            {\n                registered &&\n                <form onSubmit={submit}>\n                    <label htmlFor=''>Escribe tu mensaje</label>\n                    <textarea name='' id='' cols='30' rows='1' value={message} onChange={e => setMessage(e.target.value)}>\n                    </textarea>\n                    <Button text='Enviar mensaje'/>\n                </form>\n            }\n            \n        </div>\n    )\n}\n\nexport default ChatMessage\n","import React, {useEffect, useState } from 'react'\nimport Button from './Button'\nimport socket from './Socket'\n\n\n\nconst FlightInfo = () => {\n    const [flights, setFlights] = useState([]);\n    \n    useEffect(() => {\n        socket.on('FLIGHTS', (data) => {\n            console.log('Recibiendo FLIGHTS');\n            setFlights(data);\n        })\n        //return () => {socket.off()}\n        return () => {}\n    }, [])\n\n    const submit = (e) => {\n        e.preventDefault();\n        console.log('Pidiendo FLIGHTS')\n        socket.emit('FLIGHTS', {});\n    }\n\n    return (\n        <div className='flights_container'>\n            <form onSubmit={submit}>\n                <Button text='Info de Vuelos'/>\n                {\n                    flights.length>0 &&\n                    <table>\n                    <tr>\n                        <th>C√≥digo</th>\n                        <th>Aerol√≠nea</th>\n                        <th>Origen</th>\n                        <th>Destino</th>\n                        <th>Modelo</th>\n                        <th>Num Asientos</th>\n                        <th>Pasajeros </th>\n                    </tr>\n                    {flights.map((flight,i) => \n                        <tr key={i}>\n                            <td>{flight.code}</td>\n                            <td>{flight.airline}</td>\n                            <td>{flight.origin}</td>\n                            <td>{flight.destination}</td>\n                            <td>{flight.plane}</td>\n                            <td>{flight.seats}</td>\n                            <td>\n                                <ul>{flight.passengers.map((passenger,i) => \n                                    <li>{passenger.name} - {passenger.age} a√±os.</li>\n                                )}</ul>\n                            </td>\n                        </tr>)}\n                    \n                    </table>\n                }\n                \n                \n            </form>\n        </div>\n    )\n}\n\nexport default FlightInfo\n","import React, {useEffect, useState } from 'react'\nimport {MapContainer, TileLayer, Marker, Popup, Polyline} from 'react-leaflet';\nimport Button from './Button'\nimport socket from './Socket'\nimport L from 'leaflet';\n\n\n\nconst MapView = () => {\n    const [position, setPosition] = useState({}); // Posicion de un vuelo\n    const [trajectory, setTrajectory] = useState({});\n    const [flights, setFlights] = useState([]); // Almaceno lo que entrega FLIGHTS, para tener origen y destino de cada uno.\n    const [activateMap, setActivateMap] = useState(false);\n    const [displayPos, setDisplayPos] = useState(false);\n    const [displayTrajectory, setDisplayTrajectory] = useState(false);\n    \n    const colorOptions = [\n        {color: 'black'},\n        {color: 'lime'},\n        {color: 'yellow'},\n        {color: 'purple'},\n        {color: 'red'},\n        {color: 'blue'},\n        {color: 'white'},\n        {color: 'gray'},\n        {color: 'orange'},\n        {color: 'pink'},\n    ]\n\n\n    useEffect(() => {\n        socket.on('FLIGHTS', (data) => {\n            console.log('Recibiendo FLIGHTS en MapView')\n            setFlights(data)\n        })\n        return () => {}\n    }, [])\n\n\n    useEffect(() => {\n        socket.on('POSITION', (data) => {\n            console.log('Recibiendo ubicacion actual del vuelo ', data.code)\n            const newPosition = {};\n            newPosition[data.code] = data.position\n            setPosition(position => {return {...position, ...newPosition}; })\n            setDisplayPos(true);\n         })\n         return () => {}\n    }, [])\n\n    useEffect( () => {\n        socket.on('POSITION', (data) => {\n            const newTrajectory = {};        \n            setTrajectory( trajectory => {\n                if (trajectory.hasOwnProperty(data.code)) {\n                    if (data.position in [...trajectory[data.code]]){\n                        const current_trajectory = {...trajectory}\n                        current_trajectory[data.code] = undefined;\n                        return current_trajectory;\n                    }\n                    else {\n                        newTrajectory[data.code] = [...trajectory[data.code], data.position];\n                    }\n                    \n                }\n                else {\n                    newTrajectory[data.code] = [data.position];\n                }\n                return {...trajectory, ...newTrajectory}\n            })\n            setDisplayTrajectory(true);\n        })\n        return () => {}\n    }, [])\n\n    const mapActivator = (e) => {\n        e.preventDefault();\n        socket.emit('FLIGHTS', {});\n        setActivateMap(true);\n    }\n\n    const plane_icon = L.icon({\n        iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Plane_icon.svg/1200px-Plane_icon.svg.png',\n        iconSize:[20, 20], // size of the icon\n        rotationAngle: 45\n    });\n\n    return (\n            <div className='map_container'>\n            {\n                !activateMap &&\n                <form onSubmit={mapActivator}>\n                    <Button text='Activar el mapa' />\n                </form>\n            }\n            {\n                activateMap &&\n\n                <MapContainer center={[-32,-70]} zoom={4} scrollWheelZoom={false}>\n                <TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\">\n                </TileLayer>\n                {/* Markers de origen de vuelos */}\n                {flights.map((flight) => {\n                    return(<Marker color={'black'} position={flight.origin}>\n                    <Popup>Origen de {flight.code}</Popup>\n                    </Marker>)\n                }\n                )}\n                {/* Markers de destino de vuelos*/}\n                {\n                flights.map((flight) => {\n                    return (<Marker position={flight.destination}>\n                            <Popup>Destino de {flight.code}</Popup>\n                        </Marker>)\n                    }\n                )} \n\n                {\n                    flights.map((flight, i) => {\n                        return (\n                            <Polyline pathOptions={colorOptions[6]}  positions={[flight.origin, flight.destination]} />\n                    )}\n                )}\n\n                {      \n                    displayPos &&\n                    Object.keys(position).map((positon_key, i) => {\n                        return (\n                        <Marker position={position[positon_key]} icon={plane_icon}>\n                        <Popup>Vuelo {positon_key}</Popup>\n                        </Marker>\n                        )}\n                    ) \n                }\n\n                {      \n                 displayPos &&\n                    Object.keys(trajectory).map((trajectory_key, i) => {\n                        return (<Polyline pathOptions={colorOptions[i]} positions={[...trajectory[trajectory_key]]} />)}\n                    ) \n                }\n                \n                    \n            </MapContainer>\n            }\n            </div>\n    )\n}\n\nexport default MapView\n","import logo from './logo.svg';\nimport Header from './components/Header'\nimport ChatLog from './components/ChatLog'\nimport ChatMessage from './components/ChatMessage'\nimport FlightInfo from './components/FlightInfo'\nimport MapView from './components/MapView'\nimport {useEffect, useState} from 'react'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n      <main>\n        <div className='big_container'>\n          \n            <MapView />\n          \n          \n          <div className='chat_container'>\n            <ChatLog />\n            <ChatMessage />\n          </div>\n          \n        </div>\n        <FlightInfo />\n        \n      </main>\n      \n      <h3>Hecho por Benjamin Aldana</h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}